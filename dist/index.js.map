{"version":3,"sources":["../src/index.ts","../src/esdrt.ts","../src/Cell.tsx","../src/utils.ts"],"sourcesContent":["\r\nexport * from './esdrt';\r\n// export * from './Cell';","\r\nimport React, { FunctionComponent } from \"react\"\r\nimport Cell from \"./Cell\";\r\n// import { createRoot } from \"react-dom\"\r\ntype AnyClass<T = any> = new () => T;\r\ntype Dict = { [key: string]: any }\r\n\r\nexport type TPropsObject = {\r\n    [key: string]: {\r\n        type: \"string\" | \"number\" | \"boolean\" | \"object\" | \"function\" | \"array\",\r\n        default: any\r\n    }\r\n}\r\n\r\nexport interface TService<T> {\r\n    url: string;\r\n    method: \"get\" | \"post\";\r\n    params?: Dict;\r\n    body?: Dict;\r\n    headers?: (data: T) => any;\r\n}\r\n\r\n/**\r\n * 这个tango是有两个功能的\r\n * 1. 协助编辑器ast语法分析，用来做定位\r\n * 2. 协助编辑器列表生成，运行态的数据获取，tango会把数据挂在window上，让编辑器读取\r\n */\r\nexport const esdrt = {\r\n    // todo - 使用语法树生成\r\n    stores: {\r\n        // appstore: appStore\r\n    },\r\n    isStore: <T>(store: any) => {\r\n        return store\r\n    },\r\n    isPage: (page: React.ReactElement) => page,\r\n    // todo - implement service handler\r\n    // todo - with cache\r\n    isService: <T = Dict>(service: TService<T>) => (() => service as unknown as T),\r\n    isComponent: <T>(component: FunctionComponent<T>, propsDef: TPropsObject) => (props: any) => {\r\n\r\n        // 外面通过ast定义的\r\n        const compId = props.compId as string;\r\n        if(compId){\r\n            return React.createElement(Cell, { mode: \"sandbox\", CompId:props.compId }, React.createElement(component, props))\r\n        }else{\r\n            return React.createElement(component, props)\r\n        }\r\n\r\n    },\r\n    init(x: any) {\r\n\r\n\r\n\r\n        window.addEventListener(\"message\", (e) => {\r\n            console.log(\"ssss\", e.data)\r\n        })\r\n\r\n        window.parent.postMessage({\r\n            type: \"tango.init\"\r\n        }, \"*\")\r\n\r\n\r\n        window.addEventListener(\"click\", (e) => {\r\n\r\n            // 获取点击元素的attributes,dataset\r\n\r\n            // console.log(\"f\",e.target.attributes)\r\n            // console.log(\"ff\",e.target.dataset);\r\n\r\n        })\r\n\r\n        // 监听drag事件\r\n        // window.addEventListener(\"drag\", (e) => {\r\n        //     console.log(\"drag\",e.target)\r\n        // })\r\n\r\n        // 监听drop事件\r\n        window.document.body.addEventListener(\"dragover\", (e) => {\r\n            console.log(\"dragover\", e.target)\r\n            e.stopPropagation()\r\n            e.preventDefault()\r\n        })\r\n\r\n\r\n        window.document.body.addEventListener(\"drop\", (e) => {\r\n            console.log(\"drop\", e.dataTransfer)\r\n        })\r\n\r\n        window.document.body.addEventListener(\"dragstart\", (e) => {\r\n            console.log(\"dragstart\", e.target)\r\n        })\r\n\r\n        window.document.body.addEventListener(\"dragend\", (e) => {\r\n            console.log(\"dragend\", e.target)\r\n        })\r\n\r\n        window.document.body.addEventListener(\"dragleave\", (e) => {\r\n            console.log(\"dragleave\", e.target)\r\n        })\r\n\r\n\r\n\r\n\r\n        // // 监听鼠标按下事件\r\n        // window.addEventListener(\"mousedown\", (e) => {\r\n        //     console.log(\"mousedown\")\r\n\r\n        //     // 获取点击元素的attributes\r\n        //     console.log(\"fmousedown\",e.target)\r\n        // })\r\n\r\n        // // 监听鼠标抬起事件\r\n        // window.addEventListener(\"mouseup\", (e) => {\r\n        //     console.log(\"mouseup\",e.target)\r\n\r\n        //     // 获取点击元素的attributes\r\n        //     console.log(\"fmouseup\",e.target)\r\n        // })\r\n\r\n        // // 监听鼠标移动事件\r\n        // window.addEventListener(\"mousemove\", (e) => {\r\n        //     console.log(\"mousemove\",e.target)\r\n        // })\r\n\r\n\r\n\r\n    }\r\n    // init(mountElement: HTMLElement) {\r\n    //     console.log(\"tango init\")\r\n    //     const root = createRoot(mountElement)\r\n    //     root.render(React.createElement(RouterCreator,{}))\r\n    // }\r\n}\r\n\r\n\r\nimport { create } from 'zustand'\r\n\r\nexport const useDragStore = create<{\r\n    draggingId: string | null,\r\n    targetId: string | null,\r\n    setDraggingId: (id: string | null) => void,\r\n    clearDraggingId: () => void,\r\n    setTargetId: (id: string | null) => void,\r\n    clearTargetId: () => void,\r\n    onDragEnter: (id: string | null) => void,\r\n    onDragLeave: () => void\r\n}>((set,get) => ({\r\n    draggingId: null,\r\n    targetId: null,\r\n    setDraggingId: (id) => set({ draggingId: id }),\r\n    clearDraggingId: () => set({ draggingId: null }),\r\n    setTargetId: (id) => get().draggingId != id &&  set({ targetId: id }),\r\n    clearTargetId: () => set({ targetId: null }),\r\n\r\n    onDragEnter: (id) => set({ targetId: id }),\r\n    onDragLeave: () => set({ targetId: null }),\r\n}))\r\n\r\n\r\n//subscribe 监听DragStore的draggingId和targetId变化,打印到控制台\r\n\r\n\r\n\r\nconst unsub3 = useDragStore.subscribe(\r\n    (s,pres) => console.log(\"dragging  \",pres.draggingId,\"--->\",s.draggingId),\r\n  )\r\n\r\n  const unsub4 = useDragStore.subscribe(\r\n    (s,pres) => console.log(\"target  \",pres.targetId,\"--->\",s.targetId),\r\n  )\r\n","import { PropsWithChildren, useRef, useState } from \"react\";\r\n\r\nimport \"./cell.css\"\r\nimport { useDragStore } from \"./esdrt\";\r\nimport { cn } from \"./utils\";\r\n\r\nfunction getUUId() {\r\n    return Math.random().toString(36).slice(2);\r\n}\r\n\r\n\r\nfunction Cell(props: PropsWithChildren<{\r\n    mode: \"sandpack\" | \"sandbox\",\r\n    CompId: string\r\n}>) {\r\n\r\n    console.log(\"render Cell\", props);\r\n\r\n    // 生成唯一的随机id\r\n    // 不可以在运行态分配id，因为这样会导致编辑器无法定位语法树\r\n    // const cId = useRef<string>(getUUId())\r\n\r\n\r\n    const [insertType, setInsertType] = useState<\"top\" | \"bottom\" | \"left\" | \"right\" | \"center\" | undefined>();\r\n\r\n    const onDragEnter = useDragStore((state) => state.onDragEnter)\r\n    const onDragLeave = useDragStore((state) => state.onDragLeave)\r\n    const setDraggingId = useDragStore((state) => state.setDraggingId)\r\n    const targetId = useDragStore((state) => state.targetId);\r\n    const draggingId = useDragStore((state) => state.draggingId);\r\n    const setTargetId = useDragStore((state) => state.setTargetId);\r\n\r\n\r\n\r\n    const onMouseMove = (e: React.MouseEvent<HTMLDivElement, MouseEvent>) => {\r\n\r\n        if (!draggingId) {\r\n            return\r\n        }\r\n\r\n        const rect = e.currentTarget.getBoundingClientRect();\r\n        const x = e.clientX - rect.left;\r\n        const y = e.clientY - rect.top;\r\n        const w = rect.width;\r\n        const h = rect.height;\r\n\r\n        // 把区域划分为四个方向，按照斜对角方向划分\r\n\r\n        // 斜对角线\r\n        const fny = (x) => (w / h) * x;\r\n        const fnx = (y) => ((w - y) / h) * w;\r\n\r\n        if (y < fny(x)) {\r\n            x < fnx(y) ? setInsertType(\"top\") : setInsertType(\"right\");\r\n        } else {\r\n            x < fnx(y) ? setInsertType(\"left\") : setInsertType(\"bottom\");\r\n        }\r\n    }\r\n\r\n    const onMouseEnter = (e: React.MouseEvent<HTMLDivElement, MouseEvent>) => {\r\n\r\n        if (!draggingId) {\r\n            return\r\n        }\r\n\r\n        setTargetId(props.CompId)\r\n    }\r\n\r\n    const onMouseLeave = (e: React.MouseEvent<HTMLDivElement, MouseEvent>) => {\r\n\r\n        if (!draggingId) {\r\n            return\r\n        }\r\n\r\n        setTargetId(null)\r\n\r\n        // 复位自身\r\n        if (insertType) {\r\n            setInsertType(undefined)\r\n        }\r\n    }\r\n\r\n\r\n    return <div\r\n        data-esd-id={props.CompId}\r\n        draggable\r\n        onMouseDown={() => { }}\r\n        onMouseEnter={onMouseEnter}\r\n        onMouseLeave={onMouseLeave}\r\n        onMouseUp={() => { }}\r\n        onMouseMove={onMouseMove}\r\n        onDragStart={() => setDraggingId(props.CompId)}\r\n        onDragEnd={() => { }}\r\n        onDragOver={() => { }}\r\n        onDragLeave={() => onDragLeave()}\r\n        onDragEnter={() => onDragEnter(props.CompId)}\r\n        onDrop={() => { }}\r\n\r\n        // onClickCapture={(e)=>{\r\n        //     e.stopPropagation();\r\n        //     e.preventDefault();\r\n        // }}\r\n        // onClick={(e)=>{\r\n        //     e.stopPropagation();\r\n        //     e.preventDefault();\r\n        // }}\r\n\r\n        style={{\r\n            display: \"inline-block\",\r\n\r\n        }}\r\n\r\n        className={cn(insertType && `insert insert-${insertType}`, targetId == props.unquieId && \"insert-dragging\")}\r\n\r\n\r\n\r\n    >\r\n        {props.children}\r\n    </div>;\r\n}\r\n\r\n\r\nexport default Cell","\r\n\r\nexport function cn(...classes: string[]) {\r\n    return classes.filter(Boolean).join(' ')\r\n}"],"mappings":"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","names":["import_react","x","y","React"]}